#!/usr/bin/env bash
set -euo pipefail

pass() { printf "✅ %s\n" "$1"; }
fail() { printf "❌ %s\n" "$1"; exit 1; }
note() { printf "ℹ️  %s\n" "$1"; }

check_cmd() {
  local name="$1"; shift
  if ! command -v "$name" >/dev/null 2>&1; then
    fail "Command not found: $name"
  fi
  pass "Found $name at $(command -v "$name")"
}

check_mise_shim() {
  local name="$1"
  local path
  path=$(command -v "$name" || true)
  if [[ -z "$path" ]]; then
    fail "$name not found on PATH"
  fi
  # Prefer 'mise which' when available for clarity
  if command -v mise >/dev/null 2>&1; then
    local resolved
    resolved=$(mise which "$name" 2>/dev/null || true)
    if [[ -n "$resolved" ]]; then
      pass "$name resolved by mise → $resolved"
      return 0
    fi
  fi
  note "$name path: $path (could be a system/brew install if not shimed)"
}

note "Checking mise activation"
check_cmd mise
mise doctor || note "mise doctor reported issues (may require first-run shells)"

note "Checking language/runtime commands"
for bin in node pnpm python3 go rustc cargo java; do
  check_cmd "$bin"
  check_mise_shim "$bin"
  "$bin" --version 2>/dev/null || "$bin" -v 2>/dev/null || true
done

pass "mise verification complete"

